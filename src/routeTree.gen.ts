/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authenticatedProfileRouteImport } from './routes/(authenticated)/profile'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authenticatedDashboardRouteRouteImport } from './routes/(authenticated)/Dashboard/route'
import { Route as authenticatedDashboardIndexRouteImport } from './routes/(authenticated)/Dashboard/index'
import { Route as authenticatedDashboardSettingsRouteImport } from './routes/(authenticated)/Dashboard/settings'
import { Route as authenticatedDashboardCreateCourseRouteRouteImport } from './routes/(authenticated)/Dashboard/create-course/route'
import { Route as authenticatedDashboardCoursesRouteRouteImport } from './routes/(authenticated)/Dashboard/courses/route'
import { Route as authenticatedDashboardTestsIndexRouteImport } from './routes/(authenticated)/Dashboard/tests/index'
import { Route as authenticatedDashboardTestsCreateRouteRouteImport } from './routes/(authenticated)/Dashboard/tests/create/route'
import { Route as authenticatedDashboardTestsTestIdRouteRouteImport } from './routes/(authenticated)/Dashboard/tests/$testId/route'

const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedProfileRoute = authenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => authRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const authenticatedDashboardRouteRoute =
  authenticatedDashboardRouteRouteImport.update({
    id: '/Dashboard',
    path: '/Dashboard',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedDashboardIndexRoute =
  authenticatedDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardSettingsRoute =
  authenticatedDashboardSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardCreateCourseRouteRoute =
  authenticatedDashboardCreateCourseRouteRouteImport.update({
    id: '/create-course',
    path: '/create-course',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardCoursesRouteRoute =
  authenticatedDashboardCoursesRouteRouteImport.update({
    id: '/courses',
    path: '/courses',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardTestsIndexRoute =
  authenticatedDashboardTestsIndexRouteImport.update({
    id: '/tests/',
    path: '/tests/',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardTestsCreateRouteRoute =
  authenticatedDashboardTestsCreateRouteRouteImport.update({
    id: '/tests/create',
    path: '/tests/create',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)
const authenticatedDashboardTestsTestIdRouteRoute =
  authenticatedDashboardTestsTestIdRouteRouteImport.update({
    id: '/tests/$testId',
    path: '/tests/$testId',
    getParentRoute: () => authenticatedDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof authenticatedRouteRouteWithChildren
  '/Dashboard': typeof authenticatedDashboardRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/otp': typeof authOtpRoute
  '/profile': typeof authenticatedProfileRoute
  '/Dashboard/courses': typeof authenticatedDashboardCoursesRouteRoute
  '/Dashboard/create-course': typeof authenticatedDashboardCreateCourseRouteRoute
  '/Dashboard/settings': typeof authenticatedDashboardSettingsRoute
  '/Dashboard/': typeof authenticatedDashboardIndexRoute
  '/Dashboard/tests/$testId': typeof authenticatedDashboardTestsTestIdRouteRoute
  '/Dashboard/tests/create': typeof authenticatedDashboardTestsCreateRouteRoute
  '/Dashboard/tests': typeof authenticatedDashboardTestsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof authenticatedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/otp': typeof authOtpRoute
  '/profile': typeof authenticatedProfileRoute
  '/Dashboard/courses': typeof authenticatedDashboardCoursesRouteRoute
  '/Dashboard/create-course': typeof authenticatedDashboardCreateCourseRouteRoute
  '/Dashboard/settings': typeof authenticatedDashboardSettingsRoute
  '/Dashboard': typeof authenticatedDashboardIndexRoute
  '/Dashboard/tests/$testId': typeof authenticatedDashboardTestsTestIdRouteRoute
  '/Dashboard/tests/create': typeof authenticatedDashboardTestsCreateRouteRoute
  '/Dashboard/tests': typeof authenticatedDashboardTestsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/(authenticated)/Dashboard': typeof authenticatedDashboardRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(authenticated)/profile': typeof authenticatedProfileRoute
  '/(authenticated)/Dashboard/courses': typeof authenticatedDashboardCoursesRouteRoute
  '/(authenticated)/Dashboard/create-course': typeof authenticatedDashboardCreateCourseRouteRoute
  '/(authenticated)/Dashboard/settings': typeof authenticatedDashboardSettingsRoute
  '/(authenticated)/Dashboard/': typeof authenticatedDashboardIndexRoute
  '/(authenticated)/Dashboard/tests/$testId': typeof authenticatedDashboardTestsTestIdRouteRoute
  '/(authenticated)/Dashboard/tests/create': typeof authenticatedDashboardTestsCreateRouteRoute
  '/(authenticated)/Dashboard/tests/': typeof authenticatedDashboardTestsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Dashboard'
    | '/login'
    | '/otp'
    | '/profile'
    | '/Dashboard/courses'
    | '/Dashboard/create-course'
    | '/Dashboard/settings'
    | '/Dashboard/'
    | '/Dashboard/tests/$testId'
    | '/Dashboard/tests/create'
    | '/Dashboard/tests'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/otp'
    | '/profile'
    | '/Dashboard/courses'
    | '/Dashboard/create-course'
    | '/Dashboard/settings'
    | '/Dashboard'
    | '/Dashboard/tests/$testId'
    | '/Dashboard/tests/create'
    | '/Dashboard/tests'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(authenticated)'
    | '/(authenticated)/Dashboard'
    | '/(auth)/login'
    | '/(auth)/otp'
    | '/(authenticated)/profile'
    | '/(authenticated)/Dashboard/courses'
    | '/(authenticated)/Dashboard/create-course'
    | '/(authenticated)/Dashboard/settings'
    | '/(authenticated)/Dashboard/'
    | '/(authenticated)/Dashboard/tests/$testId'
    | '/(authenticated)/Dashboard/tests/create'
    | '/(authenticated)/Dashboard/tests/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(authenticated)': {
      id: '/(authenticated)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/profile': {
      id: '/(authenticated)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof authenticatedProfileRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(authenticated)/Dashboard': {
      id: '/(authenticated)/Dashboard'
      path: '/Dashboard'
      fullPath: '/Dashboard'
      preLoaderRoute: typeof authenticatedDashboardRouteRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/Dashboard/': {
      id: '/(authenticated)/Dashboard/'
      path: '/'
      fullPath: '/Dashboard/'
      preLoaderRoute: typeof authenticatedDashboardIndexRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/settings': {
      id: '/(authenticated)/Dashboard/settings'
      path: '/settings'
      fullPath: '/Dashboard/settings'
      preLoaderRoute: typeof authenticatedDashboardSettingsRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/create-course': {
      id: '/(authenticated)/Dashboard/create-course'
      path: '/create-course'
      fullPath: '/Dashboard/create-course'
      preLoaderRoute: typeof authenticatedDashboardCreateCourseRouteRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/courses': {
      id: '/(authenticated)/Dashboard/courses'
      path: '/courses'
      fullPath: '/Dashboard/courses'
      preLoaderRoute: typeof authenticatedDashboardCoursesRouteRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/tests/': {
      id: '/(authenticated)/Dashboard/tests/'
      path: '/tests'
      fullPath: '/Dashboard/tests'
      preLoaderRoute: typeof authenticatedDashboardTestsIndexRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/tests/create': {
      id: '/(authenticated)/Dashboard/tests/create'
      path: '/tests/create'
      fullPath: '/Dashboard/tests/create'
      preLoaderRoute: typeof authenticatedDashboardTestsCreateRouteRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
    '/(authenticated)/Dashboard/tests/$testId': {
      id: '/(authenticated)/Dashboard/tests/$testId'
      path: '/tests/$testId'
      fullPath: '/Dashboard/tests/$testId'
      preLoaderRoute: typeof authenticatedDashboardTestsTestIdRouteRouteImport
      parentRoute: typeof authenticatedDashboardRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authOtpRoute: typeof authOtpRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authOtpRoute: authOtpRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface authenticatedDashboardRouteRouteChildren {
  authenticatedDashboardCoursesRouteRoute: typeof authenticatedDashboardCoursesRouteRoute
  authenticatedDashboardCreateCourseRouteRoute: typeof authenticatedDashboardCreateCourseRouteRoute
  authenticatedDashboardSettingsRoute: typeof authenticatedDashboardSettingsRoute
  authenticatedDashboardIndexRoute: typeof authenticatedDashboardIndexRoute
  authenticatedDashboardTestsTestIdRouteRoute: typeof authenticatedDashboardTestsTestIdRouteRoute
  authenticatedDashboardTestsCreateRouteRoute: typeof authenticatedDashboardTestsCreateRouteRoute
  authenticatedDashboardTestsIndexRoute: typeof authenticatedDashboardTestsIndexRoute
}

const authenticatedDashboardRouteRouteChildren: authenticatedDashboardRouteRouteChildren =
  {
    authenticatedDashboardCoursesRouteRoute:
      authenticatedDashboardCoursesRouteRoute,
    authenticatedDashboardCreateCourseRouteRoute:
      authenticatedDashboardCreateCourseRouteRoute,
    authenticatedDashboardSettingsRoute: authenticatedDashboardSettingsRoute,
    authenticatedDashboardIndexRoute: authenticatedDashboardIndexRoute,
    authenticatedDashboardTestsTestIdRouteRoute:
      authenticatedDashboardTestsTestIdRouteRoute,
    authenticatedDashboardTestsCreateRouteRoute:
      authenticatedDashboardTestsCreateRouteRoute,
    authenticatedDashboardTestsIndexRoute:
      authenticatedDashboardTestsIndexRoute,
  }

const authenticatedDashboardRouteRouteWithChildren =
  authenticatedDashboardRouteRoute._addFileChildren(
    authenticatedDashboardRouteRouteChildren,
  )

interface authenticatedRouteRouteChildren {
  authenticatedDashboardRouteRoute: typeof authenticatedDashboardRouteRouteWithChildren
  authenticatedProfileRoute: typeof authenticatedProfileRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedDashboardRouteRoute:
    authenticatedDashboardRouteRouteWithChildren,
  authenticatedProfileRoute: authenticatedProfileRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
